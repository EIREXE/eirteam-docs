:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/steamworks/doc_classes/HBSteamLobby.xml.

.. _class_HBSteamLobby:

HBSteamLobby
============

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Class representing a Steam lobby.

.. rst-class:: classref-reftable-group

Properties
----------

.. table::
   :widths: auto

   +-------------------------------------------+-------------------------------------------------------------+
   | :ref:`int<class_int>`                     | :ref:`max_members<class_HBSteamLobby_property_max_members>` |
   +-------------------------------------------+-------------------------------------------------------------+
   | :ref:`HBSteamFriend<class_HBSteamFriend>` | :ref:`owner<class_HBSteamLobby_property_owner>`             |
   +-------------------------------------------+-------------------------------------------------------------+

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`HBSteamLobby<class_HBSteamLobby>` | :ref:`create_lobby<class_HBSteamLobby_method_create_lobby>` **(** :ref:`LobbyType<enum_SteamworksConstants_LobbyType>` lobby_type, :ref:`int<class_int>` max_members **)** |static| |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`HBSteamLobby<class_HBSteamLobby>` | :ref:`from_id<class_HBSteamLobby_method_from_id>` **(** :ref:`int<class_int>` lobby_id **)** |static|                                                                               |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`             | :ref:`get_data<class_HBSteamLobby_method_get_data>` **(** :ref:`String<class_String>` key **)** |const|                                                                             |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`String<class_String>`             | :ref:`get_member_data<class_HBSteamLobby_method_get_member_data>` **(** :ref:`HBSteamFriend<class_HBSteamFriend>` member, :ref:`String<class_String>` key **)** |const|             |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                    | :ref:`join_lobby<class_HBSteamLobby_method_join_lobby>` **(** **)**                                                                                                                 |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                 | :ref:`set_data<class_HBSteamLobby_method_set_data>` **(** :ref:`String<class_String>` key, :ref:`String<class_String>` value **)**                                                  |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`bool<class_bool>`                 | :ref:`set_lobby_owner<class_HBSteamLobby_method_set_lobby_owner>` **(** :ref:`HBSteamFriend<class_HBSteamFriend>` owner **)**                                                       |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_HBSteamLobby_signal_chat_message_received:

.. rst-class:: classref-signal

**chat_message_received** **(** :ref:`HBSteamFriend<class_HBSteamFriend>` sender, :ref:`PackedByteArray<class_PackedByteArray>` data **)**

Emitted when a chat message is received.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_signal_lobby_created:

.. rst-class:: classref-signal

**lobby_created** **(** :ref:`int<class_int>` result **)**

Emitted when lobby creation has completed.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_signal_lobby_data_updated:

.. rst-class:: classref-signal

**lobby_data_updated** **(** **)**

Emitted when the per-lobby custom data has changed.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_signal_lobby_entered:

.. rst-class:: classref-signal

**lobby_entered** **(** :ref:`bool<class_bool>` success **)**

Emitted when the user has entered the lobby.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_signal_lobby_member_data_updated:

.. rst-class:: classref-signal

**lobby_member_data_updated** **(** :ref:`HBSteamFriend<class_HBSteamFriend>` member **)**

Emitted when the per-lobby member custom data has changed.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_signal_member_joined:

.. rst-class:: classref-signal

**member_joined** **(** :ref:`HBSteamFriend<class_HBSteamFriend>` new_member **)**

Emitted when a new member enters the lobby.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_signal_member_left:

.. rst-class:: classref-signal

**member_left** **(** :ref:`HBSteamFriend<class_HBSteamFriend>` new_member **)**

Emitted when a new member leaves the lobby.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Property Descriptions
---------------------

.. _class_HBSteamLobby_property_max_members:

.. rst-class:: classref-property

:ref:`int<class_int>` **max_members**

.. rst-class:: classref-property-setget

- void **set_max_members** **(** :ref:`int<class_int>` value **)**
- :ref:`int<class_int>` **get_max_members** **(** **)**

Maximum number of members that can join this lobby.



\ **Note:** Can only be set by the owner of the lobby.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_property_owner:

.. rst-class:: classref-property

:ref:`HBSteamFriend<class_HBSteamFriend>` **owner**

.. rst-class:: classref-property-setget

- :ref:`HBSteamFriend<class_HBSteamFriend>` **get_owner** **(** **)**

Current owner of the lobby.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_HBSteamLobby_method_create_lobby:

.. rst-class:: classref-method

:ref:`HBSteamLobby<class_HBSteamLobby>` **create_lobby** **(** :ref:`LobbyType<enum_SteamworksConstants_LobbyType>` lobby_type, :ref:`int<class_int>` max_members **)** |static|

Creates a lobby of a given type with a maximum amount of members.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_from_id:

.. rst-class:: classref-method

:ref:`HBSteamLobby<class_HBSteamLobby>` **from_id** **(** :ref:`int<class_int>` lobby_id **)** |static|

Creates a steam lobby from a given ID.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_get_data:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_data** **(** :ref:`String<class_String>` key **)** |const|

Returns custom data that was set on this lobby.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_get_member_data:

.. rst-class:: classref-method

:ref:`String<class_String>` **get_member_data** **(** :ref:`HBSteamFriend<class_HBSteamFriend>` member, :ref:`String<class_String>` key **)** |const|

Returns member-specific custom data.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_join_lobby:

.. rst-class:: classref-method

void **join_lobby** **(** **)**

Joins this lobby.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_set_data:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **set_data** **(** :ref:`String<class_String>` key, :ref:`String<class_String>` value **)**

Sets custom data for this lobby, can only be done by the owner.



\ **Note:** Can only be set by the owner of the lobby.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_set_lobby_owner:

.. rst-class:: classref-method

:ref:`bool<class_bool>` **set_lobby_owner** **(** :ref:`HBSteamFriend<class_HBSteamFriend>` owner **)**

.. container:: contribute

	There is currently no description for this method. Please help us by :ref:`contributing one <doc_updating_the_class_reference>`!

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
