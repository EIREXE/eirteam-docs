:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/steamworks/doc_classes/HBSteamLobby.xml.

.. _class_HBSteamLobby:

HBSteamLobby
============

**Inherits:** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

Class representing a Steam lobby.

.. rst-class:: classref-reftable-group

Methods
-------

.. table::
   :widths: auto

   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`HBSteamLobby<class_HBSteamLobby>` | :ref:`create_lobby<class_HBSteamLobby_method_create_lobby>` **(** :ref:`LobbyType<enum_SteamworksConstants_LobbyType>` lobby_type, :ref:`int<class_int>` max_members **)** |static| |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | :ref:`HBSteamLobby<class_HBSteamLobby>` | :ref:`from_id<class_HBSteamLobby_method_from_id>` **(** :ref:`int<class_int>` lobby_id **)** |static|                                                                               |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
   | void                                    | :ref:`join_lobby<class_HBSteamLobby_method_join_lobby>` **(** **)**                                                                                                                 |
   +-----------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Signals
-------

.. _class_HBSteamLobby_signal_lobby_created:

.. rst-class:: classref-signal

**lobby_created** **(** :ref:`int<class_int>` result **)**

Called when a lobby is finished creating.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_signal_lobby_entered:

.. rst-class:: classref-signal

**lobby_entered** **(** :ref:`bool<class_bool>` success **)**

Called when a lobby is entered.

.. rst-class:: classref-section-separator

----

.. rst-class:: classref-descriptions-group

Method Descriptions
-------------------

.. _class_HBSteamLobby_method_create_lobby:

.. rst-class:: classref-method

:ref:`HBSteamLobby<class_HBSteamLobby>` **create_lobby** **(** :ref:`LobbyType<enum_SteamworksConstants_LobbyType>` lobby_type, :ref:`int<class_int>` max_members **)** |static|

Creates a lobby of a given type with a maximum amount of members.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_from_id:

.. rst-class:: classref-method

:ref:`HBSteamLobby<class_HBSteamLobby>` **from_id** **(** :ref:`int<class_int>` lobby_id **)** |static|

Creates a steam lobby from a given ID.

.. rst-class:: classref-item-separator

----

.. _class_HBSteamLobby_method_join_lobby:

.. rst-class:: classref-method

void **join_lobby** **(** **)**

Joins this lobby.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
.. |bitfield| replace:: :abbr:`BitField (This value is an integer composed as a bitmask of the following flags.)`
